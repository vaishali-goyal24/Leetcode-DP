class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        vector<int> dpl(n), dpr(n);
        
        int lsf = prices[0];
        
        for (int i=1; i < n; i++) {
            lsf = min(lsf, prices[i]);
            
            dpl[i] = max(dpl[i-1], prices[i] - lsf);
        }
        
        int msf = prices[n-1];
        
        for (int i=n-2; i >= 0; i--) {
            msf = max(msf, prices[i]);
            
            dpr[i] = max(dpr[i+1], msf - prices[i]);
        }
        
        int ans = 0;
        
        for (int i=0; i < n; i++) {
            ans = max(ans, dpl[i] + dpr[i]);
        }
        
        return ans;
        
        
    }
};
